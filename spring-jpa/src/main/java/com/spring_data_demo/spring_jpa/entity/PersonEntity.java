package com.spring_data_demo.spring_jpa.entity;

import java.util.Date;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

@Entity // creates a table in db with name = "person"
@Table(name = "person_table") // this annotation creates a table with a custom name called "person_table"
public class PersonEntity {
    @Id// indicates that this field is primary key
    @GeneratedValue // the primary key is auto-generated by Hibernate.
    private int id;

    @Column(name = "person_name") // creates a column in person table with name = "person_name"
    //w/o column annotation, column is created in table with name same as field name, i.e., "name" in this example.
    private String name;
    private String location;
    private Date birthdate;

    public PersonEntity(){// a no args constructor is required

    }

    public PersonEntity(String name, String location, Date birthdate) { // this constructor does not have id because we want hibernate to cerate id for us.
        this.name = name;
        this.location = location;
        this.birthdate = birthdate;
    }

    public int getId() {
        return id;
    }
    public void setId(int id) {
        this.id = id;
    }
    public void setName(String name) {
        this.name = name;
    }
    public void setLocation(String location) {
        this.location = location;
    }
    public void setBirthdate(Date birthdate) {
        this.birthdate = birthdate;
    }
    public String getName() {
        return name;
    }
    public String getLocation() {
        return location;
    }
    public Date getBirthdate() {
        return birthdate;
    }
}
